Block I Apollo Guidance Computer (AGC4) assembler version 1.6

First pass: generate symbol table.
Second pass: generate object code.

                          ; TECO5 (file:teco5.asm)
                          ; 
                          ; Version:	1.0
                          ; Author:	John Pultorak
                          ; Date:		9/14/2001
                          ; 
                          ; PURPOSE:
                          ; Test and checkout program for the Block 1 Apollo Guidance Computer.
                          ; Tests interrupts.
                          ; 
                          ; OPERATION:
                          ; Tests the interrupts by initializing 4 counters to zero and then
                          ; entering a loop where the 1st counter (mainCtr) is incremented on
                          ; each iteration of the loop. 
                          ; 
                          ; Interrupts are disabled and enabled during each iteration by INHINT
                          ; and RELINT instructions.
                          ; 
                          ; Interrupts are automatically inhibited during part of each iteration by
                          ; an overflow condition in register A.
                          ; 
                          ; Interrupt service routines for T3RUPT, DSRUPT (aka T4RUPT) and KEYRUPT
                          ; increment their own counters upon each interrupt.
                          ; 
                          ; ERRATA:
                          ; - Written for the AGC4R assembler. The assembler directives and syntax
                          ; differ somewhat from the original AGC assembler.
                          ; - The tests attempt to check all threads, but are not exhaustive.
                          ; 
                          ; SOURCES:
                          ; Information on the Block 1 architecture: instruction set, instruction
                          ; sequences, registers, register transfers, control pulses, memory and 
                          ; memory addressing, I/O assignments, interrupts, and involuntary counters
                          ; was obtained from:
                          ; 
                          ;	A. Hopkins, R. Alonso, and H. Blair-Smith, "Logical Description 
                          ;		for the Apollo Guidance Computer (AGC4)", R-393, 
                          ;		MIT Instrumentation Laboratory, Cambridge, MA, Mar. 1963.
                          ; 
                          ; Supplementary information was obtained from:
                          ; 
                          ;	R. Alonso, J. H. Laning, Jr. and H. Blair-Smith, "Preliminary 
                          ;		MOD 3C Programmer's Manual", E-1077, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Nov. 1961.
                          ; 
                          ;	B. I. Savage and A. Drake, "AGC4 Basic Training Manual, Volume I", 
                          ;		E-2052, MIT Instrumentation Laboratory, Cambridge, 
                          ;		MA, Jan. 1967.
                          ; 
                          ;	E. C. Hall, "MIT's Role in Project Apollo, Volume III, Computer 
                          ;		Subsystem", R-700, MIT Charles Stark Draper Laboratory, 
                          ;		Cambridge, MA, Aug. 1972.
                          ; 
                          ;	A. Hopkins, "Guidance Computer Design, Part VI", source unknown.
                          ; 
                          ;	A. I. Green and J. J. Rocchio, "Keyboard and Display System Program 
                          ;		for AGC (Program Sunrise)", E-1574, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Aug. 1964.
                          ; 
                          ;	E, C. Hall, "Journey to the Moon: The History of the Apollo 
                          ;		Guidance Computer", AIAA, Reston VA, 1996.
                          ; 
                          
                          ; ----------------------------------------------
                          
                          ; ----------------------------------------------
                          ; ERASEABLE MEMORY -- DATA SEGMENT
                          
                                         ORG      %47            ; start of data area
00047    0047     00000 1 mainCtr        DS       %0             
                          
00050    0050     00000 1 T3Ctr          DS       %0             ; counts T3RUPTs
00051    0051     00000 1 DSCtr          DS       %0             ; counts DSRUPTs (T4RUPT)
00052    0052     00000 1 KYCtr          DS       %0             ; counts KEYRUPT
                          
                          ; ----------------------------------------------
                          ; ENTRY POINTS
                          
                          ; program (re)start
                                         ORG      GOPROG         
02000    2000 0  1,2030 0                TC       goMAIN         
                          
                          ; interrupt service entry points
                                         ORG      T3RUPT         
02004    2004 5  0,0026 0                TS       ARUPT          
02005    2005 3  0,0001 0                XCH      Q              
02006    2006 5  0,0027 1                TS       QRUPT          
02007    2007 0  1,2064 1                TC       goT3           
                          
                                         ORG      DSRUPT         ; aka T4RUPT	
02014    2014 5  0,0026 0                TS       ARUPT          
02015    2015 3  0,0001 0                XCH      Q              
02016    2016 5  0,0027 1                TS       QRUPT          
02017    2017 0  1,2071 0                TC       goDS           
                          
                                         ORG      KEYRUPT        
02020    2020 5  0,0026 0                TS       ARUPT          
02021    2021 3  0,0001 0                XCH      Q              
02022    2022 5  0,0027 1                TS       QRUPT          
02023    2023 0  1,2076 1                TC       goKEY          
                          
                          
                          ; ----------------------------------------------
                          ; FIXED MEMORY -- SHARED DATA SEGMENT
                          
02024    2024     00000 1 ZERO           DS       %0             
02025    2025     00001 0 ONE            DS       %1             
02026    2026     25252 0 AD25252        DS       %25252         ;+10922 dec, see TECO1 AD test
02027    2027     52525 1 AD52525        DS       %52525         ;-10922 dec, see TECO1 AD test
                          
                          ; ----------------------------------------------
                          ; MAIN PROGRAM
                          
                          goMAIN         EQU      *              
02030    2030 2  0,0000 0                INHINT                  ; disable interrupts
                          
                          ; clear counters for interrupts and for interations
                          ; though main loop.
                          
02031    2031 3  1,2024 0                CAF      ZERO           
02032    2032 5  0,0047 1                TS       mainCtr        ; mainCtr = 0
02033    2033 5  0,0050 1                TS       T3Ctr          ; T3Ctr = 0
02034    2034 5  0,0051 0                TS       DSCtr          ; DSCtr = 0
02035    2035 5  0,0052 0                TS       KYCtr          ; KYCtr = 0
                          
                          ; keeps bumping mainCtr in an infinite loop.
                          ; interrupts are disabled and enabled on each
                          ; iteration of the loop.
                          
                          infLoop        EQU      *              
                          
02036    2036 2  0,0000 0                INHINT                  ; disable interrupt
                          
                          ; increment mainCtr while interrupt is inhibited.
                          
02037    2037 3  1,2024 0                CAF      ZERO           
02040    2040 6  0,0047 1                AD       mainCtr        ; load mainCtr into A
02041    2041 6  1,2025 1                AD       ONE            ; incr
                          
02042    2042 2  0,0000 1                RELINT                  ; enable interrupts
                          
02043    2043 5  0,0047 1                TS       mainCtr        ; store increment value
                          
                          ; create a positive overflow in A. Interrupts are inhibited
                          ; while A contains an overflow. The overflow is produced
                          ; by adding %25252 + %25252 = %52524 (sign + 14 magnitude).
                          ; This is the overflow test in TECO1 for the AD instruction.
                          
02044    2044 3  1,2026 1                CAF      AD25252        
02045    2045 6  1,2026 1                AD       AD25252        ; positive overflow
                          
02046    2046 3  0,0000 1                NOOP                    ; interrupt should be inhib
02047    2047 3  0,0000 1                NOOP                    
                          
                          ; remove the overflow, this reenables the interrupt.
                          
02050    2050 3  1,2024 0                CAF      ZERO           ; clear the overflow in A
                          
02051    2051 3  0,0000 1                NOOP                    ; interrupt should be reenab
02052    2052 3  0,0000 1                NOOP                    
                          
                          ; create a negative overflow in A. Interrupts are inhibited
                          ; while A contains an overflow. The overflow is produced
                          ; by adding %52525 + %52525 = %25253 (sign + 14 magnitude).
                          ; This is the overflow test in TECO1 for the AD instruction.
                          
02053    2053 3  1,2027 0                CAF      AD52525        
02054    2054 6  1,2027 0                AD       AD52525        ; positive overflow
                          
02055    2055 3  0,0000 1                NOOP                    ; interrupt should be inhib
02056    2056 3  0,0000 1                NOOP                    
                          
                          ; remove the overflow, this reenables the interrupt.
                          
02057    2057 3  1,2024 0                CAF      ZERO           ; clear the overflow in A
                          
02060    2060 3  0,0000 1                NOOP                    ; interrupt should be reenab
02061    2061 3  0,0000 1                NOOP                    
                          
                          
02062    2062 0  1,2036 0                TC       infLoop        ; mainCtr no overflow
02063    2063 0  1,2036 0                TC       infLoop        ; mainCtr overflowed
                          
                          ; ----------------------------------------------
                          ; INTERRUPT SERVICE ROUTINE
                          
                          goT3           EQU      *              
02064    2064 3  1,2024 0                CAF      ZERO           
02065    2065 6  0,0050 1                AD       T3Ctr          ; load T3Ctr into A
02066    2066 6  1,2025 1                AD       ONE            ; incr
02067    2067 5  0,0050 1                TS       T3Ctr          ; store
02070    2070 0  1,2103 1                TC       endRUPT        
                          
                          goDS           EQU      *              
02071    2071 3  1,2024 0                CAF      ZERO           
02072    2072 6  0,0051 0                AD       DSCtr          ; load DSCtr into A
02073    2073 6  1,2025 1                AD       ONE            ; incr
02074    2074 5  0,0051 0                TS       DSCtr          ; store
02075    2075 0  1,2103 1                TC       endRUPT        
                          
                          goKEY          EQU      *              
02076    2076 3  1,2024 0                CAF      ZERO           
02077    2077 6  0,0052 0                AD       KYCtr          ; load KYCtr into A
02100    2100 6  1,2025 1                AD       ONE            ; incr
02101    2101 5  0,0052 0                TS       KYCtr          ; store
02102    2102 0  1,2103 1                TC       endRUPT        
                          
                          endRUPT        EQU      *              
02103    2103 3  0,0027 1                XCH      QRUPT          ; restore Q
02104    2104 5  0,0001 0                TS       Q              
02105    2105 3  0,0026 0                XCH      ARUPT          ; restore A
02106    2106 2  0,0000 1                RESUME                  ; finished, go back
                          
                          
                          

Assembly complete. Errors = 0

Symbol table:
mainCtr        000047   T3Ctr          000050   DSCtr          000051   
KYCtr          000052   GOPROG         002000   T3RUPT         002004   
DSRUPT         002014   KEYRUPT        002020   ZERO           002024   
ONE            002025   AD25252        002026   AD52525        002027   
goMAIN         002030   infLoop        002036   goT3           002064   
goDS           002071   goKEY          002076   endRUPT        002103   
ARUPT          000026   Q              000001   QRUPT          000027   

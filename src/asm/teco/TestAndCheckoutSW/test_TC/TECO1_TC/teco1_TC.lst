Block I Apollo Guidance Computer (AGC4) assembler version 1.6

First pass: generate symbol table.
Second pass: generate object code.

                          ; TECO1_TC (file:teco1_TC.asm)
                          ; 
                          ; Version:	1.0
                          ; Author:	John Pultorak
                          ; Date:		9/14/2001
                          ; 
                          ; PURPOSE:
                          ; Test and checkout program for the Block 1 Apollo Guidance Computer.
                          ; Tests basic instructions: TC.
                          ; 
                          ; OPERATION:
                          ; Enters an infinite loop at the end of the test. The A register contains 
                          ; the code for the test that failed, or the PASS code if all tests 
                          ; succeeded. See test codes below.
                          ; 
                          ; ERRATA:
                          ; - Written for the AGC4R assembler. The assembler directives and syntax
                          ; differ somewhat from the original AGC assembler.
                          ; - The tests attempt to check all threads, but are not exhaustive.
                          ; 
                          ; SOURCES:
                          ; Information on the Block 1 architecture: instruction set, instruction
                          ; sequences, registers, register transfers, control pulses, memory and 
                          ; memory addressing, I/O assignments, interrupts, and involuntary counters
                          ; was obtained from:
                          ; 
                          ;	A. Hopkins, R. Alonso, and H. Blair-Smith, "Logical Description 
                          ;		for the Apollo Guidance Computer (AGC4)", R-393, 
                          ;		MIT Instrumentation Laboratory, Cambridge, MA, Mar. 1963.
                          ; 
                          ; Supplementary information was obtained from:
                          ; 
                          ;	R. Alonso, J. H. Laning, Jr. and H. Blair-Smith, "Preliminary 
                          ;		MOD 3C Programmer's Manual", E-1077, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Nov. 1961.
                          ; 
                          ;	B. I. Savage and A. Drake, "AGC4 Basic Training Manual, Volume I", 
                          ;		E-2052, MIT Instrumentation Laboratory, Cambridge, 
                          ;		MA, Jan. 1967.
                          ; 
                          ;	E. C. Hall, "MIT's Role in Project Apollo, Volume III, Computer 
                          ;		Subsystem", R-700, MIT Charles Stark Draper Laboratory, 
                          ;		Cambridge, MA, Aug. 1972.
                          ; 
                          ;	A. Hopkins, "Guidance Computer Design, Part VI", source unknown.
                          ; 
                          ;	A. I. Green and J. J. Rocchio, "Keyboard and Display System Program 
                          ;		for AGC (Program Sunrise)", E-1574, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Aug. 1964.
                          ; 
                          ;	E, C. Hall, "Journey to the Moon: The History of the Apollo 
                          ;		Guidance Computer", AIAA, Reston VA, 1996.
                          ; 
                          
                          START          EQU      %00            
                          
                          TCtst          EQU      %01            ; TC check failed
                          
                          PASS           EQU      %12345         ; PASSED all checks
                          ; ----------------------------------------------
                          
                          OVFCNTR        EQU      %00034         ; overflow counter
                          
                          ; ----------------------------------------------
                          ; ERASEABLE MEMORY -- DATA SEGMENT
                          
                                         ORG      %100           ; start of data area
00100    0100     00000 1 curtest        DS       START          ; current test
00101    0101     00000 1 savQ           DS       %0             
                          
                          ; ----------------------------------------------
                          ; ENTRY POINTS
                          
                          ; program (re)start
                                         ORG      GOPROG         
02000    2000 0  1,2001 1                TC       goMAIN         
                          
                          ; ----------------------------------------------
                          ; FIXED MEMORY -- SHARED DATA SEGMENT
                          
                          ; ----------------------------------------------
                          ; MAIN PROGRAM
                          
                          goMAIN         EQU      *              
                          ;		INHINT		; disable interrupts
                          
02001    2001 0  1,2010 1                TCR      begin          
                          
                          ; Test basic instructions.
02002    2002 0  1,2015 1                TCR      chkTC          
                          
                          ; Passed all tests.
02003    2003 0  1,2035 0                TCR      finish         
                          
                          fail           EQU      *              
02004    2004 3  0,0100 0                XCH      curtest        ; load last passed test into A
02005    2005 5  0,0100 0                TS       curtest        
                          
                          end            EQU      *              
02006    2006 0  1,2006 0                TC       end            ; finished, TC trap
                          
                          ; ----------------------------------------------
                          ; INITIALIZE FOR START OF TESTING
                          
02007    2007     00000 1 STRTcode       DS       START          
                          
                          begin          EQU      *              
02010    2010 3  1,2007 1                XCH      STRTcode       
02011    2011 5  0,0100 0                TS       curtest        ; set current test code to START
02012    2012 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          ; TEST TC INSTRUCTION SUBROUTINE
                          ; L:	TC	K
                          ; Verifies the following:
                          ; - Set C(Q) = TC L+1
                          ; - Take next instruction from K, and proceed from there.
                          
02013    2013     00001 0 TCcode         DS       TCtst          ; code for this test
02014    2014     02022 0 Qtest          DS       TCret1         ; expected return address
                          
                          chkTC          EQU      *              
02015    2015 3  0,0001 0                XCH      Q              
02016    2016 5  0,0101 1                TS       savQ           ; save return address
                          
02017    2017 3  1,2013 1                CAF      TCcode         
02020    2020 5  0,0100 0                TS       curtest        ; set current test code to this test
                          
                          ; attempt a jump
02021    2021 0  1,2023 1                TC       *+2            ; make test jump
02022    2022 0  1,2004 1 TCret1         TC       fail           ; failed to jump
                          
                          ; verify correct return address in Q
02023    2023 4  0,0001 1                CS       Q              
02024    2024 6  1,2014 0                AD       Qtest          ; put (-Q) + val2 in A
02025    2025 1  0,0000 0                CCS      A              ; A = DABS
02026    2026 0  1,2004 1                TC       fail           ; >0 (Q < Qtest)
02027    2027 0  1,2004 1                TC       fail           ; +0 (never happens)
02030    2030 0  1,2004 1                TC       fail           ; <0 (Q > Qtest)
                          
                          ; passed the test
02031    2031 3  0,0101 1                XCH      savQ           
02032    2032 5  0,0001 0                TS       Q              ; restore return address
02033    2033 0  0,0000 0                RETURN                  
                          ; ----------------------------------------------
                          ; PASSED ALL TESTS!
                          
02034    2034     12345 0 PASScode       DS       PASS           
                          
                          finish         EQU      *              
02035    2035 3  1,2034 1                CAF      PASScode       
02036    2036 5  0,0100 0                TS       curtest        ; set current test code to PASS
02037    2037 0  0,0000 0                RETURN                  
                          
                          

Assembly complete. Errors = 0

Symbol table:
START          000000   TCtst          000001   PASS           012345   
OVFCNTR        000034   curtest        000100   savQ           000101   
GOPROG         002000   goMAIN         002001   fail           002004   
end            002006   STRTcode       002007   begin          002010   
TCcode         002013   Qtest          002014   chkTC          002015   
TCret1         002022   PASScode       002034   finish         002035   
Q              000001   A              000000   
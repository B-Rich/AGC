Block I Apollo Guidance Computer (AGC4) assembler version 1.6

First pass: generate symbol table.
Second pass: generate object code.

                          ; TECO1_MASK (file:teco1_MASK.asm)
                          ; 
                          ; Version:	1.0
                          ; Author:	John Pultorak
                          ; Date:		9/14/2001
                          ; 
                          ; PURPOSE:
                          ; Test and checkout program for the Block 1 Apollo Guidance Computer.
                          ; Tests basic instructions: MASK.
                          ; 
                          ; OPERATION:
                          ; Enters an infinite loop at the end of the test. The A register contains 
                          ; the code for the test that failed, or the PASS code if all tests 
                          ; succeeded. See test codes below.
                          ; 
                          ; ERRATA:
                          ; - Written for the AGC4R assembler. The assembler directives and syntax
                          ; differ somewhat from the original AGC assembler.
                          ; - The tests attempt to check all threads, but are not exhaustive.
                          ; 
                          ; SOURCES:
                          ; Information on the Block 1 architecture: instruction set, instruction
                          ; sequences, registers, register transfers, control pulses, memory and 
                          ; memory addressing, I/O assignments, interrupts, and involuntary counters
                          ; was obtained from:
                          ; 
                          ;	A. Hopkins, R. Alonso, and H. Blair-Smith, "Logical Description 
                          ;		for the Apollo Guidance Computer (AGC4)", R-393, 
                          ;		MIT Instrumentation Laboratory, Cambridge, MA, Mar. 1963.
                          ; 
                          ; Supplementary information was obtained from:
                          ; 
                          ;	R. Alonso, J. H. Laning, Jr. and H. Blair-Smith, "Preliminary 
                          ;		MOD 3C Programmer's Manual", E-1077, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Nov. 1961.
                          ; 
                          ;	B. I. Savage and A. Drake, "AGC4 Basic Training Manual, Volume I", 
                          ;		E-2052, MIT Instrumentation Laboratory, Cambridge, 
                          ;		MA, Jan. 1967.
                          ; 
                          ;	E. C. Hall, "MIT's Role in Project Apollo, Volume III, Computer 
                          ;		Subsystem", R-700, MIT Charles Stark Draper Laboratory, 
                          ;		Cambridge, MA, Aug. 1972.
                          ; 
                          ;	A. Hopkins, "Guidance Computer Design, Part VI", source unknown.
                          ; 
                          ;	A. I. Green and J. J. Rocchio, "Keyboard and Display System Program 
                          ;		for AGC (Program Sunrise)", E-1574, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Aug. 1964.
                          ; 
                          ;	E, C. Hall, "Journey to the Moon: The History of the Apollo 
                          ;		Guidance Computer", AIAA, Reston VA, 1996.
                          ; 
                          
                          START          EQU      %00            
                          
                          MASKtst        EQU      %10            ; MASK check failed
                          
                          PASS           EQU      %12345         ; PASSED all checks
                          ; ----------------------------------------------
                          
                          OVFCNTR        EQU      %00034         ; overflow counter
                          
                          ; ----------------------------------------------
                          ; ERASEABLE MEMORY -- DATA SEGMENT
                          
                                         ORG      %100           ; start of data area
00100    0100     00000 1 curtest        DS       START          ; current test
00101    0101     00000 1 savQ           DS       %0             
                          
                          ; ----------------------------------------------
                          ; ENTRY POINTS
                          
                          ; program (re)start
                                         ORG      GOPROG         
02000    2000 0  1,2001 1                TC       goMAIN         
                          
                          ; ----------------------------------------------
                          ; FIXED MEMORY -- SHARED DATA SEGMENT
                          
                          ; ----------------------------------------------
                          ; MAIN PROGRAM
                          
                          goMAIN         EQU      *              
02001    2001 2  0,0000 0                INHINT                  ; disable interrupts
                          
02002    2002 0  1,2011 0                TCR      begin          
                          
                          ; Test basic instructions.
02003    2003 0  1,2020 1                TCR      chkMASK        
                          
                          ; Passed all tests.
02004    2004 0  1,2040 1                TCR      finish         
                          
                          fail           EQU      *              
02005    2005 3  0,0100 0                XCH      curtest        ; load last passed test into A
02006    2006 5  0,0100 0                TS       curtest        
                          
                          end            EQU      *              
02007    2007 0  1,2007 1                TC       end            ; finished, TC trap
                          
                          ; ----------------------------------------------
                          ; INITIALIZE FOR START OF TESTING
                          
02010    2010     00000 1 STRTcode       DS       START          
                          
                          begin          EQU      *              
02011    2011 3  1,2010 1                XCH      STRTcode       
02012    2012 5  0,0100 0                TS       curtest        ; set current test code to START
02013    2013 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          ; TEST MASK INSTRUCTION SUBROUTINE
                          ; L:	MASK	K
                          ; Verifies the following:
                          ; - Set C(A) = b(A) & C(K)
                          
02014    2014     00010 0 MASKcode       DS       MASKtst        ; code for this test
02015    2015     46314 0 MASK1          DS       %46314         
02016    2016     25252 0 MASK2          DS       %25252         
02017    2017     04210 0 MASKval        DS       %04210         ; expected result of MASK1 & MASK2
                          
                          chkMASK        EQU      *              
02020    2020 3  0,0001 0                XCH      Q              
02021    2021 5  0,0101 1                TS       savQ           ; save return address
                          
                          ; perform logical and of MASK1 and MASK2
02022    2022 3  1,2015 1                CAF      MASK1          
02023    2023 7  1,2016 0                MASK     MASK2          
                          ; verify C(A) = b(A) & C(K)
02024    2024 4  0,0000 0                COM                     ; get -A
02025    2025 6  1,2017 0                AD       MASKval        ; put (-A) + expected value in A
02026    2026 1  0,0000 0                CCS      A              ; compare
02027    2027 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02030    2030 0  1,2005 0                TC       fail           ; +0
02031    2031 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
02032    2032 3  1,2014 0                CAF      MASKcode       
02033    2033 5  0,0100 0                TS       curtest        ; set current test code to this test
                          
                          ; passed the test
02034    2034 3  0,0101 1                XCH      savQ           
02035    2035 5  0,0001 0                TS       Q              ; restore return address
02036    2036 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          ; PASSED ALL TESTS!
                          
02037    2037     12345 0 PASScode       DS       PASS           
                          
                          finish         EQU      *              
02040    2040 3  1,2037 1                CAF      PASScode       
02041    2041 5  0,0100 0                TS       curtest        ; set current test code to PASS
02042    2042 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------

Assembly complete. Errors = 0

Symbol table:
START          000000   MASKtst        000010   PASS           012345   
OVFCNTR        000034   curtest        000100   savQ           000101   
GOPROG         002000   goMAIN         002001   fail           002005   
end            002007   STRTcode       002010   begin          002011   
MASKcode       002014   MASK1          002015   MASK2          002016   
MASKval        002017   chkMASK        002020   PASScode       002037   
finish         002040   Q              000001   A              000000   

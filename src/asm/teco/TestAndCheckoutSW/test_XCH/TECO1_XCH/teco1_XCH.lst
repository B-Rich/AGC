Block I Apollo Guidance Computer (AGC4) assembler version 1.6

First pass: generate symbol table.
Second pass: generate object code.

                          ; TECO1_xch (file:teco1_xch.asm)
                          ; 
                          ; Version:	1.0
                          ; Author:	John Pultorak
                          ; Date:		9/14/2001
                          ; 
                          ; PURPOSE:
                          ; Test and checkout program for the Block 1 Apollo Guidance Computer.
                          ; Tests basic instructions: XCH
                          ; 
                          ; OPERATION:
                          ; Enters an infinite loop at the end of the test. The A register contains 
                          ; the code for the test that failed, or the PASS code if all tests 
                          ; succeeded. See test codes below.
                          ; 
                          ; ERRATA:
                          ; - Written for the AGC4R assembler. The assembler directives and syntax
                          ; differ somewhat from the original AGC assembler.
                          ; - The tests attempt to check all threads, but are not exhaustive.
                          ; 
                          ; SOURCES:
                          ; Information on the Block 1 architecture: instruction set, instruction
                          ; sequences, registers, register transfers, control pulses, memory and 
                          ; memory addressing, I/O assignments, interrupts, and involuntary counters
                          ; was obtained from:
                          ; 
                          ;	A. Hopkins, R. Alonso, and H. Blair-Smith, "Logical Description 
                          ;		for the Apollo Guidance Computer (AGC4)", R-393, 
                          ;		MIT Instrumentation Laboratory, Cambridge, MA, Mar. 1963.
                          ; 
                          ; Supplementary information was obtained from:
                          ; 
                          ;	R. Alonso, J. H. Laning, Jr. and H. Blair-Smith, "Preliminary 
                          ;		MOD 3C Programmer's Manual", E-1077, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Nov. 1961.
                          ; 
                          ;	B. I. Savage and A. Drake, "AGC4 Basic Training Manual, Volume I", 
                          ;		E-2052, MIT Instrumentation Laboratory, Cambridge, 
                          ;		MA, Jan. 1967.
                          ; 
                          ;	E. C. Hall, "MIT's Role in Project Apollo, Volume III, Computer 
                          ;		Subsystem", R-700, MIT Charles Stark Draper Laboratory, 
                          ;		Cambridge, MA, Aug. 1972.
                          ; 
                          ;	A. Hopkins, "Guidance Computer Design, Part VI", source unknown.
                          ; 
                          ;	A. I. Green and J. J. Rocchio, "Keyboard and Display System Program 
                          ;		for AGC (Program Sunrise)", E-1574, MIT Instrumentation 
                          ;		Laboratory, Cambridge, MA, Aug. 1964.
                          ; 
                          ;	E, C. Hall, "Journey to the Moon: The History of the Apollo 
                          ;		Guidance Computer", AIAA, Reston VA, 1996.
                          ; 
                          
                          START          EQU      %00            
                          
                          XCHtst         EQU      %04            ; XCH check failed
                          
                          PASS           EQU      %12345         ; PASSED all checks
                          ; ----------------------------------------------
                          
                          
                          OVFCNTR        EQU      %00034         ; overflow counter
                          
                          ; ----------------------------------------------
                          ; ERASEABLE MEMORY -- DATA SEGMENT
                          
                                         ORG      %100           ; start of data area
00100    0100     00000 1 curtest        DS       START          ; current test
00101    0101     00000 1 savQ           DS       %0             
                          
                          
                          ; XCH test
                          ; pre-set in erasable memory because we don't
                          ; want to use XCH to initialize them prior to testing XCH.
00102    0102     00000 1 XCHkP0         DS       +0             
00103    0103     77777 0 XCHkM0         DS       -0             
00104    0104     52525 1 XCHkalt1       DS       %52525         ; alternating bit pattern 1
00105    0105     25252 0 XCHkalt2       DS       %25252         ; alternating bit pattern 2
                          
                          
                          ; ----------------------------------------------
                          ; ENTRY POINTS
                          
                          ; program (re)start
                                         ORG      GOPROG         
02000    2000 0  1,2001 1                TC       goMAIN         
                          
                          
                          ; ----------------------------------------------
                          ; FIXED MEMORY -- SHARED DATA SEGMENT
                          
                          ; ----------------------------------------------
                          ; MAIN PROGRAM
                          
                          goMAIN         EQU      *              
02001    2001 2  0,0000 0                INHINT                  ; disable interrupts
                          
02002    2002 0  1,2011 0                TCR      begin          
                          
                          ; Test basic instructions.
02003    2003 0  1,2021 0                TCR      chkXCH         
                          
                          ; Passed all tests.
02004    2004 0  1,2121 1                TCR      finish         
                          
                          fail           EQU      *              
02005    2005 3  0,0100 0                XCH      curtest        ; load last passed test into A
02006    2006 5  0,0100 0                TS       curtest        
                          
                          end            EQU      *              
02007    2007 0  1,2007 1                TC       end            ; finished, TC trap
                          
                          ; ----------------------------------------------
                          ; INITIALIZE FOR START OF TESTING
                          
02010    2010     00000 1 STRTcode       DS       START          
                          
                          begin          EQU      *              
02011    2011 3  1,2010 1                XCH      STRTcode       
02012    2012 5  0,0100 0                TS       curtest        ; set current test code to START
02013    2013 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          ; TEST XCH INSTRUCTION SUBROUTINE
                          ; L:	XCH	K
                          ; Verifies the following:
                          ; - set C(A) = b(K)
                          ; - set C(K) = b(A)
                          ; - take next instruction from L+1
                          
02014    2014     00004 0 XCHcode        DS       XCHtst         ; code for this test
                          ; XCH test values
02015    2015     00000 1 XCHfP0         DS       +0             
02016    2016     77777 0 XCHfM0         DS       -0             
02017    2017     52525 1 XCHfalt1       DS       %52525         ; alternating bit pattern 1
02020    2020     25252 0 XCHfalt2       DS       %25252         ; alternating bit pattern 2
                          
                          chkXCH         EQU      *              
02021    2021 3  0,0001 0                XCH      Q              
02022    2022 5  0,0101 1                TS       savQ           ; save return address
                          
02023    2023 3  1,2014 0                CAF      XCHcode        
02024    2024 5  0,0100 0                TS       curtest        ; set current test code to this test
                          
                          ; test - initial conditions: K=+0, A=-0
                          ; initialize A
02025    2025 4  1,2015 0                CS       XCHfP0         
                          ; exchange A and K
02026    2026 3  0,0102 1                XCH      XCHkP0         
                          ; test contents of A for expected value
02027    2027 4  0,0000 0                COM                     ; get -A
02030    2030 6  1,2015 1                AD       XCHfP0         ; put (-A) + expected value in A
02031    2031 1  0,0000 0                CCS      A              ; A = DABS
02032    2032 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02033    2033 0  1,2005 0                TC       fail           ; +0
02034    2034 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          ; test contents of K for expected value
02035    2035 4  0,0102 0                CS       XCHkP0         ; get -A
02036    2036 6  1,2016 1                AD       XCHfM0         ; put (-A) + expected value in A
02037    2037 1  0,0000 0                CCS      A              ; A = DABS
02040    2040 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02041    2041 0  1,2005 0                TC       fail           ; +0
02042    2042 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
                          ; test - initial conditions: K=-0, A=+0
                          ; initialize A
02043    2043 4  1,2016 0                CS       XCHfM0         
                          ; exchange A and K
02044    2044 3  0,0103 0                XCH      XCHkM0         
                          ; test contents of A for expected value
02045    2045 4  0,0000 0                COM                     ; get -A
02046    2046 6  1,2016 1                AD       XCHfM0         ; put (-A) + expected value in A
02047    2047 1  0,0000 0                CCS      A              ; A = DABS
02050    2050 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02051    2051 0  1,2005 0                TC       fail           ; +0
02052    2052 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          ; test contents of K for expected value
02053    2053 4  0,0103 1                CS       XCHkM0         ; get -A
02054    2054 6  1,2015 1                AD       XCHfP0         ; put (-A) + expected value in A
02055    2055 1  0,0000 0                CCS      A              ; A = DABS
02056    2056 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02057    2057 0  1,2005 0                TC       fail           ; +0
02060    2060 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
                          ; test - initial conditions: K=52525, A=25252
                          ; initialize A
02061    2061 4  1,2017 1                CS       XCHfalt1       
                          ; exchange A and K
02062    2062 3  0,0104 1                XCH      XCHkalt1       
                          ; test contents of A for expected value
02063    2063 4  0,0000 0                COM                     ; get -A
02064    2064 6  1,2017 0                AD       XCHfalt1       ; put (-A) + expected value in A
02065    2065 1  0,0000 0                CCS      A              ; A = DABS
02066    2066 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02067    2067 0  1,2005 0                TC       fail           ; +0
02070    2070 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          ; test contents of K for expected value
02071    2071 4  0,0104 0                CS       XCHkalt1       ; get -A
02072    2072 6  1,2020 1                AD       XCHfalt2       ; put (-A) + expected value in A
02073    2073 1  0,0000 0                CCS      A              ; A = DABS
02074    2074 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02075    2075 0  1,2005 0                TC       fail           ; +0
02076    2076 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
                          ; test - initial conditions: K=25252, A=52525
                          ; initialize A
02077    2077 4  1,2020 0                CS       XCHfalt2       
                          ; exchange A and K
02100    2100 3  0,0105 0                XCH      XCHkalt2       
                          ; test contents of A for expected value
02101    2101 4  0,0000 0                COM                     ; get -A
02102    2102 6  1,2020 1                AD       XCHfalt2       ; put (-A) + expected value in A
02103    2103 1  0,0000 0                CCS      A              ; A = DABS
02104    2104 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02105    2105 0  1,2005 0                TC       fail           ; +0
02106    2106 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          ; test contents of K for expected value
02107    2107 4  0,0105 1                CS       XCHkalt2       ; get -A
02110    2110 6  1,2017 0                AD       XCHfalt1       ; put (-A) + expected value in A
02111    2111 1  0,0000 0                CCS      A              ; A = DABS
02112    2112 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02113    2113 0  1,2005 0                TC       fail           ; +0
02114    2114 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
                          ; passed the test
02115    2115 3  0,0101 1                XCH      savQ           
02116    2116 5  0,0001 0                TS       Q              ; restore return address
02117    2117 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          ; PASSED ALL TESTS!
                          
02120    2120     12345 0 PASScode       DS       PASS           
                          
                          finish         EQU      *              
02121    2121 3  1,2120 0                CAF      PASScode       
02122    2122 5  0,0100 0                TS       curtest        ; set current test code to PASS
02123    2123 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          
                          

Assembly complete. Errors = 0

Symbol table:
START          000000   XCHtst         000004   PASS           012345   
OVFCNTR        000034   curtest        000100   savQ           000101   
XCHkP0         000102   XCHkM0         000103   XCHkalt1       000104   
XCHkalt2       000105   GOPROG         002000   goMAIN         002001   
fail           002005   end            002007   STRTcode       002010   
begin          002011   XCHcode        002014   XCHfP0         002015   
XCHfM0         002016   XCHfalt1       002017   XCHfalt2       002020   
chkXCH         002021   PASScode       002120   finish         002121   
Q              000001   A              000000   
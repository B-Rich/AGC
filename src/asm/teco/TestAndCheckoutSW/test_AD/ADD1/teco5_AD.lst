Block I Apollo Guidance Computer (AGC4) assembler version 1.6

First pass: generate symbol table.
Second pass: generate object code.

                          ; -------------------------------------------------------
                          ; TECO2_AD (file:teco2_AD.asm)
                          ; 
                          START          EQU      %00            
                          ADtst          EQU      %07            ; AD check failed
                          PASS           EQU      %12345         ; PASSED all checks
                          ; ----------------------------------------------
                          
                          OVFCNTR        EQU      %00034         ; overflow counter
                          
                          ; ----------------------------------------------
                          ; ERASEABLE MEMORY -- DATA SEGMENT
                          
                                         ORG      %100           ; start of data area
00100    0100     00000 1 curtest        DS       START          ; current test
00101    0101     00000 1 savQ           DS       %0             ; save result
00102    0102     77777 0 ADk            DS       -0             ; AD test
                          
                          ; ----------------------------------------------
                          ; ENTRY POINTS
                          
                          ; program (re)start
                                         ORG      GOPROG         
02000    2000 0  1,2001 1                TC       goMAIN         
                          
                          ; ----------------------------------------------
                          ; FIXED MEMORY -- SHARED DATA SEGMENT
                          ; ----------------------------------------------
                          ; MAIN PROGRAM
                          goMAIN         EQU      *              
02001    2001 2  0,0000 0                INHINT                  ; disable interrupts
02002    2002 0  1,2011 0 repeat         TCR      begin          
                          
                          ; Test basic instructions.
02003    2003 0  1,2033 0                TCR      chkAD          
                          
                          ; Passed all tests.
02004    2004 0  1,2074 0                TCR      finish         
                          
                          fail           EQU      *              
02005    2005 3  0,0100 0                XCH      curtest        ; load last passed test into A
02006    2006 5  0,0100 0                TS       curtest        
                          
                          end            EQU      *              
02007    2007 0  1,2007 1                TC       end            ; finished, TC trap
                          
                          ; ----------------------------------------------
                          ; INITIALIZE FOR START OF TESTING
                          
02010    2010     00000 1 STRTcode       DS       START          
                          
                          begin          EQU      *              
02011    2011 3  1,2010 1                XCH      STRTcode       
02012    2012 5  0,0100 0                TS       curtest        ; set current test code to START
02013    2013 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------
                          ; TEST AD INSTRUCTION SUBROUTINE
                          ; L:	AD	K
                          ; Verifies the following:
                          ; - Set C(A) = b(A) + C(K)
                          ; - Take next instruction from L+1
                          ; - if C(A) has positive overflow,
                          ; -- increment overflow counter by 1
                          ; - if C(A) has negative overflow,
                          ; -- decrement overflow counter by 1
                          
02014    2014     00007 0 ADcode         DS       ADtst          ; code for this test
02015    2015     00000 1 ADplus0        DS       +0             
02016    2016     00001 0 ADplus1        DS       1              
02017    2017     77776 1 ADmin1         DS       -1             
                          
02020    2020     25252 0 AD25252        DS       %25252         ; +10922 decimal (10 1010 1010 1010)
02021    2021     12525 0 AD12525        DS       %12525         ; +5461 decimal  (01 0101 0101 0101)
02022    2022     37777 1 AD37777        DS       %37777         ; largest positive number (11 1111 1111 1111)
02023    2023     12524 1 AD12524        DS       %12524         ; positive overflow of %25252+%25252
                          
02024    2024     52525 1 AD52525        DS       %52525         ; -10922 decimal
02025    2025     65252 1 AD65252        DS       %65252         ; -5461 decimal
02026    2026     40000 0 AD40000        DS       %40000         ; largest negative number (100 0000 0000 0000)
02027    2027     65253 0 AD65253        DS       %65253         ; negative overflow of %52525+65252 (110 1010 1010 1011)
                          
02030    2030     00000 1 ADcurtest      DS       START          ; current test
02031    2031     00000 1 ADsavQ         DS       %0             ; save result
02032    2032     77777 0 ADADk          DS       -0             ; AD test
                          
                          
                          chkAD          EQU      *              
02033    2033 3  0,0001 0                XCH      Q              
02034    2034 5  0,0101 1                TS       savQ           ; save return address
                          
02035    2035 3  1,2014 0                CAF      ADcode         
02036    2036 5  0,0100 0                TS       curtest        ; set current test code to this test
                          
                          ; ----------------------------------------------
                          ; TEST3: sum positive, overflow
                          ; initialize overflow counter and positive overflow storage
                          
                          ; ------------------------------------------
02037    2037 3  1,2030 0                CAF      ADcurtest      ; reinitialize
02040    2040 5  0,0100 0                TS       curtest        
02041    2041 3  1,2031 1                CAF      ADsavQ         ; reinitialize
02042    2042 5  0,0101 1                TS       savQ           
02043    2043 3  1,2032 1                CAF      ADADk          ; reinitialize
02044    2044 5  0,0102 1                TS       ADk            
                          ; ------------------------------------------
                          
                          
02045    2045 3  1,2015 1                CAF      ADplus0        
02046    2046 5  0,0034 0                TS       OVFCNTR        
02047    2047 5  0,0102 1                TS       ADk            
                          
                          ; add: %25252 + %25252 = %52524 (sign + 14 magnitude)
02050    2050 3  1,2020 1                CAF      AD25252        
02051    2051 6  1,2020 1                AD       AD25252        
02052    2052 5  0,0102 1                TS       ADk            ; store positive overflow
02053    2053 0  1,2005 0                TC       fail           
                          
                          ; verify ADk = %12524
02054    2054 4  0,0102 0                CS       ADk            ; get -A
02055    2055 6  1,2023 1                AD       AD12524        ; put (-A) + expected value in A
02056    2056 1  0,0000 0                CCS      A              ; compare
02057    2057 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02060    2060 0  1,2005 0                TC       fail           ; +0
02061    2061 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
                          ; ----------------------------------------------
                          ; verify overflow counter =%00001
02062    2062 4  0,0034 1                CS       OVFCNTR        ; get -A
02063    2063 6  1,2016 1                AD       ADplus1        ; put (-A) + expected value in A
02064    2064 1  0,0000 0                CCS      A              ; compare
02065    2065 0  1,2005 0                TC       fail           ; >0 (A < expected value)
02066    2066 0  1,2005 0                TC       fail           ; +0
02067    2067 0  1,2005 0                TC       fail           ; <0 (A > expected value)
                          
                          ; ----------------------------------------------
02070    2070 3  0,0101 1                XCH      savQ           
02071    2071 5  0,0001 0                TS       Q              ; restore return address
02072    2072 0  0,0000 0                RETURN                  
                          ; ----------------------------------------------
                          
                          
                          ; ----------------------------------------------
                          ; PASSED ALL TESTS!
                          
02073    2073     12345 0 PASScode       DS       PASS           
                          
                          finish         EQU      *              
02074    2074 3  1,2073 1                CAF      PASScode       
02075    2075 5  0,0100 0                TS       curtest        ; set current test code to PASS
02076    2076 0  0,0000 0                RETURN                  
                          
                          ; ----------------------------------------------

Assembly complete. Errors = 0

Symbol table:
START          000000   ADtst          000007   PASS           012345   
OVFCNTR        000034   curtest        000100   savQ           000101   
ADk            000102   GOPROG         002000   goMAIN         002001   
repeat         002002   fail           002005   end            002007   
STRTcode       002010   begin          002011   ADcode         002014   
ADplus0        002015   ADplus1        002016   ADmin1         002017   
AD25252        002020   AD12525        002021   AD37777        002022   
AD12524        002023   AD52525        002024   AD65252        002025   
AD40000        002026   AD65253        002027   ADcurtest      002030   
ADsavQ         002031   ADADk          002032   chkAD          002033   
PASScode       002073   finish         002074   Q              000001   
A              000000   